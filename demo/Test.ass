	TSTO #11
	ADDSP #10
	BOV pile_pleine
;  --------------------------------------------------
;        Construction des tables des methodes        
;  --------------------------------------------------
; Construction de la table des methodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Construction de la table des methodes de A
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
	LOAD code.A.init, R0
	STORE R0, 5(GB)
	LOAD code.A.add, R0
	STORE R0, 6(GB)
	LOAD code.A.printList, R0
	STORE R0, 7(GB)
; --------------------------------------------------
;                Start main program                 
; --------------------------------------------------
; Variable declarations:
	NEW #4, R15
	BOV heap_overflow
	LEA 3(GB), R0
	STORE R0, 0(R15)
	PUSH R15
	BSR init.A
	POP R15
	STORE R15, 8(GB)
	LOAD #0, R15
	STORE R15, 9(GB)
; End declarations:
; Insts:
	ADDSP #2
	LOAD 8(GB), R15
	STORE R15, 0(SP)
	LOAD #10, R15
	STORE R15, -1(SP)
	LOAD 0(SP), R15
	CMP #null, R15
	BEQ derefNull
	LOAD 0(R15), R15
	BSR 2(R15)
	SUBSP #2
	ADDSP #2
	LOAD 8(GB), R15
	STORE R15, 0(SP)
	LOAD #10, R15
	FLOAT R15, R15
	STORE R15, -1(SP)
	LOAD 0(SP), R15
	CMP #null, R15
	BEQ derefNull
	LOAD 0(R15), R15
	BSR 3(R15)
	SUBSP #2
	LOAD #0, R15
	STORE R15, 9(GB)
	WSTR "Liste : "
	LOAD 8(GB), R15
	LOAD 1(R15), R15
	STORE R15, 10(GB)
	BRA E_Cond.0
E_Debut.0:
	WSTR " "
	LOAD #1, R14
	LOAD #0, R15
	LOAD #0, R13
	LOAD 9(GB), R12
	MUL R14, R12
	ADD R12, R15
	MUL R13, R14
	LOAD 10(GB), R14
beginWhile.0:
	CMP #0, R15
	BEQ endWhile.0
	LEA 1(R14), R14
	SUB #1, R15
	BRA beginWhile.0
endWhile.0:
	LOAD 0(R14), R13
	LOAD R13, R1
	WFLOAT
	LOAD 9(GB), R15
	ADD #1, R15
	STORE R15, 9(GB)
E_Cond.0:
	LOAD 9(GB), R15
	LOAD 8(GB), R14
	LOAD 2(R14), R14
	CMP R14, R15
	BLT E_Debut.0
	WNL
; End insts:
	HALT
; --------------------------------------------------
;                End main program                 
; --------------------------------------------------
; -----------------------------------------------
;                    Classe Object               
; -----------------------------------------------
code.object.equals:
	LOAD -2(LB), R0
	LOAD 0(R0), R0
	LOAD -3(LB), R1
	LOAD 0(R1), R1
	CMP R0, R1
	SEQ R0
	RTS
; --------------------------------------------------
; Classe A
; --------------------------------------------------
; Initialisation des champs de A
init.A:
	TSTO #15
	BOV pile_pleine
; Début Sauvegarde de registres
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
; Fin Sauvegarde de registres
	LOAD #null, R15
	LOAD -2(LB), R14
	STORE R15, 1(R14)
	LOAD #0, R15
	LOAD -2(LB), R14
	STORE R15, 2(R14)
	LOAD #0, R15
	LOAD -2(LB), R14
	STORE R15, 3(R14)
; Début Restauration de registres
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
; Fin Restauration de registres
	RTS
code.A.init:
	TSTO #16
	BOV pile_pleine
; Début Sauvegarde de registres
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
; Fin Sauvegarde de registres
	LOAD #1, R1
	LOAD -3(LB), R15
	CMP #0, R15
	BLE allocation_problem
	MUL R15, R1
	NEW R1, R15
	BOV heap_overflow
	LOAD #0, R14
	LOAD R15, R13
forLabel.0:
	CMP R14, R1
	BLE endForLabel.0
	LOAD #0x0.0p0, R0
	STORE R0, 0(R13)
	LEA 1(R13), R13
	ADD #1, R14
	BRA forLabel.0
endForLabel.0:
	LOAD -2(LB), R14
	STORE R15, 1(R14)
	LOAD -3(LB), R15
	LOAD -2(LB), R14
	STORE R15, 3(R14)
	LOAD #0, R15
	LOAD -2(LB), R14
	STORE R15, 2(R14)
fin.A.init:
; Début Restauration de registres
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
; Fin Restauration de registres
	RTS
code.A.add:
	TSTO #16
	BOV pile_pleine
; Début Sauvegarde de registres
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
; Fin Sauvegarde de registres
	LOAD -2(LB), R15
	LOAD 2(R15), R15
	LOAD -2(LB), R14
	LOAD 3(R14), R14
	CMP R14, R15
	BGE else.0
	WSTR "capacity : "
	LOAD -2(LB), R15
	LOAD 3(R15), R15
	LOAD R15, R1
	WINT
	WNL
	LOAD #1, R14
	LOAD #0, R15
	LOAD #0, R13
	LOAD -2(LB), R12
	LOAD 2(R12), R12
	MUL R14, R12
	ADD R12, R15
	MUL R13, R14
	LOAD -2(LB), R14
beginWhile.1:
	CMP #0, R15
	BEQ endWhile.1
	LEA 1(R14), R14
	SUB #1, R15
	BRA beginWhile.1
endWhile.1:
	LOAD R14, R13
	LOAD -3(LB), R15
	STORE R15, 0(R13)
	LOAD -2(LB), R15
	LOAD 2(R15), R15
	ADD #1, R15
	LOAD -2(LB), R14
	STORE R15, 2(R14)
	BRA end.0
else.0:
	WSTR "Erreur : La liste est pleine, impossible d'ajouter un élément."
end.0:
fin.A.add:
; Début Restauration de registres
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
; Fin Restauration de registres
	RTS
code.A.printList:
	TSTO #16
	BOV pile_pleine
; Début Sauvegarde de registres
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
; Fin Sauvegarde de registres
	LOAD #0, R15
	STORE R15, 1(LB)
	WSTR "Liste : "
	BRA E_Cond.1
E_Debut.1:
	WSTR " "
	LOAD #1, R14
	LOAD #0, R15
	LOAD #0, R13
	LOAD 1(LB), R12
	MUL R14, R12
	ADD R12, R15
	MUL R13, R14
	LOAD -2(LB), R14
beginWhile.2:
	CMP #0, R15
	BEQ endWhile.2
	LEA 1(R14), R14
	SUB #1, R15
	BRA beginWhile.2
endWhile.2:
	LOAD 0(R14), R13
	LOAD R13, R1
	WFLOAT
	LOAD 1(LB), R15
	ADD #1, R15
	STORE R15, 1(LB)
E_Cond.1:
	LOAD 1(LB), R15
	LOAD -2(LB), R14
	LOAD 2(R14), R14
	CMP R14, R15
	BLT E_Debut.1
	WNL
fin.A.printList:
; Début Restauration de registres
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
; Fin Restauration de registres
	RTS
pile_pleine:
	WSTR "Erreur : Débordement de la pile"
	WNL
	ERROR
division_zero:
	WSTR "Erreur : Division par zero"
	WNL
	ERROR
mod_zero:
	WSTR "Erreur : Modulo par zero"
	WNL
	ERROR
ErreurLecture:
	WSTR "Erreur : Erreur lecture"
	WNL
	ERROR
overflow_float:
	WSTR "Erreur : Débordement flottant"
	WNL
	ERROR
heap_overflow:
	WSTR "Erreur : Heap overflow"
	WNL
	ERROR
derefNull:
	WSTR "Erreur : Déréférencement null"
	WNL
	ERROR
missing_return:
	WSTR "Erreur : Return null dans fonction non void"
	WNL
	ERROR
index_list_problem:
	WSTR "Erreur : Dépassage de la taille du tableau"
	WNL
	ERROR
index_list_nagative:
	WSTR "Erreur : Indice négative d'un tableau"
	WNL
	ERROR
allocation_problem:
	WSTR "Erreur : allocation avec indice <= 0"
	WNL
	ERROR
