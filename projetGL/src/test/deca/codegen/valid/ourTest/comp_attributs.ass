	TSTO #8
	ADDSP #7
	BOV pile_pleine
;  --------------------------------------------------
;        Construction des tables des methodes        
;  --------------------------------------------------
; Construction de la table des methodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Construction de la table des methodes de Point
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
	LOAD code.Point.isAbove, R0
	STORE R0, 5(GB)
; --------------------------------------------------
;                Start main program                 
; --------------------------------------------------
; Variable declarations:
	NEW #3, R15
	BOV heap_overflow
	LEA 3(GB), R0
	STORE R0, 0(R15)
	PUSH R15
	BSR init.Point
	POP R15
	STORE R15, 6(GB)
	NEW #3, R15
	BOV heap_overflow
	LEA 3(GB), R0
	STORE R0, 0(R15)
	PUSH R15
	BSR init.Point
	POP R15
	STORE R15, 7(GB)
; End declarations:
; Insts:
	LOAD 6(GB), R15
	LOAD #5, R14
	CMP #null, R15
	BEQ derefNull
	STORE R14, 1(R15)
	LOAD 6(GB), R15
	LOAD #10, R14
	CMP #null, R15
	BEQ derefNull
	STORE R14, 2(R15)
	LOAD 7(GB), R15
	LOAD #5, R14
	CMP #null, R15
	BEQ derefNull
	STORE R14, 1(R15)
	LOAD 7(GB), R15
	LOAD #8, R14
	CMP #null, R15
	BEQ derefNull
	STORE R14, 2(R15)
	ADDSP #2
	LOAD 6(GB), R15
	STORE R15, 0(SP)
	LOAD 7(GB), R15
	STORE R15, -1(SP)
	LOAD 0(SP), R15
	CMP #null, R15
	BEQ derefNull
	LOAD 0(R15), R15
	BSR 2(R15)
	SUBSP #2
	LOAD R0, R15
	CMP #0, R15
	BEQ else.0
	WSTR "Point p1 is above p2."
	WNL
	BRA end.0
else.0:
end.0:
; End insts:
	HALT
; --------------------------------------------------
;                End main program                 
; --------------------------------------------------
; -----------------------------------------------
;                    Classe Object               
; -----------------------------------------------
code.object.equals:
	LOAD -2(LB), R0
	LOAD 0(R0), R0
	LOAD -3(LB), R1
	LOAD 0(R1), R1
	CMP R0, R1
	SEQ R0
	RTS
; --------------------------------------------------
; Classe Point
; --------------------------------------------------
; Initialisation des champs de Point
init.Point:
	TSTO #15
	BOV pile_pleine
; Début Sauvegarde de registres
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
; Fin Sauvegarde de registres
	LOAD #0, R15
	LOAD -2(LB), R14
	STORE R15, 1(R14)
	LOAD #0, R15
	LOAD -2(LB), R14
	STORE R15, 2(R14)
; Début Restauration de registres
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
; Fin Restauration de registres
	RTS
code.Point.isAbove:
	TSTO #16
	BOV pile_pleine
; Début Sauvegarde de registres
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
; Fin Sauvegarde de registres
	LOAD -2(LB), R14
	LOAD 2(R14), R14
	LOAD -3(LB), R13
	LOAD 2(R13), R13
	CMP R13, R14
	BLE falseLabel.0
	LOAD #1, R15
	BRA endLabel.0
falseLabel.0:
	LOAD #0, R15
endLabel.0:
	LOAD R15, R0
; Début Restauration de registres
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
; Fin Restauration de registres
	RTS
fin.Point.isAbove:
	BRA missing_return
pile_pleine:
	WSTR "Erreur : Débordement de la pile"
	WNL
	ERROR
division_zero:
	WSTR "Erreur : Division par zero"
	WNL
	ERROR
mod_zero:
	WSTR "Erreur : Modulo par zero"
	WNL
	ERROR
ErreurLecture:
	WSTR "Erreur : Erreur lecture"
	WNL
	ERROR
overflow_float:
	WSTR "Erreur : Débordement flottant"
	WNL
	ERROR
heap_overflow:
	WSTR "Erreur : Heap overflow"
	WNL
	ERROR
derefNull:
	WSTR "Erreur : Déréférencement null"
	WNL
	ERROR
missing_return:
	WSTR "Erreur : Return null dans fonction non void"
	WNL
	ERROR
index_list_problem:
	WSTR "Erreur : Dépassage de la taille du tableau"
	WNL
	ERROR
index_list_nagative:
	WSTR "Erreur : Indice négative d'un tableau"
	WNL
	ERROR
allocation_problem:
	WSTR "Erreur : allocation avec indice <= 0"
	WNL
	ERROR
